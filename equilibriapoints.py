# -*- coding: utf-8 -*-
"""
Created on Wed Aug 02 05:39:10 2022

@authors: L. Magrini & M. Gadotti (magrini@ifsp.edu.br & mc.gadotti@unesp.br)
"""

import math

# Definicao dos parametros utilizados para as simulacoes
global alpha, beta, p, gamma_a, gamma_s, gamma_as, mi, v, epsilon, tau, N
alpha, beta, p, gamma_a, gamma_s, gamma_as, mi, v, epsilon, tau, N = \
    [0.8, 0.7662, 0.5, 2/7, 1/7, 1/14, 0.0723, 2/100, 0.8, 4, 10**6]

#Pontos de Equilibrio do Modelo em Funcao dos Parametros
#Existem Dois: um Livre de Doenca (dfe) e outro Endemico (ee)
def equilibria_points(opcao):
    # Os parametros sao variaveis globais neste script!!
    if opcao == 'ee':
        exp_value = math.exp(-0.0723*4)
        S2 = (N*mi**2 + N*gamma_a*gamma_s + N*gamma_s*gamma_as + N*gamma_a*mi + N*gamma_s*mi + N*gamma_as*mi)/(exp_value*(beta*gamma_a + beta*gamma_as + beta*mi - alpha*beta*gamma_a + alpha*beta*gamma_s))

        V2 = (N*mi**4*v + N*mi**5*v + 2*N*gamma_a*mi**3*v + 2*N*gamma_a*mi**4*v + 2*N*gamma_s*mi**3*v + 2*N*gamma_s*mi**4*v + 2*N*gamma_as*mi**3*v + 2*N*gamma_as*mi**4*v + N*gamma_a**2*gamma_s**2*v + N*gamma_s**2*gamma_as**2*v + N*gamma_a**2*mi**2*v + N*gamma_a**2*mi**3*v + N*gamma_s**2*mi**2*v + N*gamma_s**2*mi**3*v + N*gamma_as**2*mi**2*v + N*gamma_as**2*mi**3*v - N*exp_value*gamma_a**2*gamma_s**2*v - N*exp_value*gamma_s**2*gamma_as**2*v - N*exp_value*gamma_s**2*mi**2*v + 2*N*gamma_a*gamma_s**2*mi**2*v + 2*N*gamma_a**2*gamma_s*mi**2*v + N*gamma_a**2*gamma_s**2*mi*v + 2*N*gamma_s*gamma_as**2*mi**2*v + 2*N*gamma_s**2*gamma_as*mi**2*v + N*gamma_s**2*gamma_as**2*mi*v + 2*N*gamma_a*gamma_s**2*gamma_as*v - N*exp_value*gamma_s*mi**3*v + 4*N*gamma_a*gamma_s*mi**2*v + 2*N*gamma_a*gamma_s**2*mi*v + 2*N*gamma_a**2*gamma_s*mi*v + 4*N*gamma_a*gamma_s*mi**3*v + 2*N*gamma_a*gamma_as*mi**2*v + 2*N*gamma_a*gamma_as*mi**3*v + 4*N*gamma_s*gamma_as*mi**2*v + 2*N*gamma_s*gamma_as**2*mi*v + 2*N*gamma_s**2*gamma_as*mi*v + 4*N*gamma_s*gamma_as*mi**3*v - 2*N*exp_value*gamma_a*gamma_s**2*gamma_as*v - N*alpha*exp_value*gamma_a*mi**3*v + N*alpha*exp_value*gamma_s*mi**3*v - 2*N*exp_value*gamma_a*gamma_s*mi**2*v - 2*N*exp_value*gamma_a*gamma_s**2*mi*v - N*exp_value*gamma_a**2*gamma_s*mi*v - 2*N*exp_value*gamma_s*gamma_as*mi**2*v - N*exp_value*gamma_s*gamma_as**2*mi*v - 2*N*exp_value*gamma_s**2*gamma_as*mi*v + 4*N*gamma_a*gamma_s*gamma_as*mi**2*v + 2*N*gamma_a*gamma_s**2*gamma_as*mi*v - N*alpha*exp_value*gamma_a**2*mi**2*v + N*alpha*exp_value*gamma_s**2*mi**2*v + 4*N*gamma_a*gamma_s*gamma_as*mi*v - 2*N*exp_value*gamma_a*gamma_s*gamma_as*mi*v + N*alpha*exp_value*gamma_a*gamma_s**2*mi*v - N*alpha*exp_value*gamma_a**2*gamma_s*mi*v - N*alpha*exp_value*gamma_a*gamma_as*mi**2*v + N*alpha*exp_value*gamma_s*gamma_as*mi**2*v + N*alpha*exp_value*gamma_s**2*gamma_as*mi*v - N*alpha*exp_value*gamma_a*gamma_s*gamma_as*mi*v)/(exp_value*(beta*gamma_a + beta*gamma_as + beta*mi - alpha*beta*gamma_a + alpha*beta*gamma_s)*(epsilon*mi**3 + epsilon*mi**4 - mi**2*v - mi**3*v + epsilon*mi**2*v + epsilon*mi**3*v - gamma_a*mi**2*v - gamma_s*mi**2*v - gamma_as*mi**2*v - gamma_a*gamma_s*v - gamma_s*gamma_as*v - gamma_a*mi*v - gamma_s*mi*v - gamma_as*mi*v + beta*exp_value*mi**2 + beta*exp_value*mi**3 + epsilon*gamma_a*mi**2 + epsilon*gamma_a*mi**3 + epsilon*gamma_s*mi**2 + epsilon*gamma_s*mi**3 + epsilon*gamma_as*mi**2 + epsilon*gamma_as*mi**3 - exp_value*gamma_s*mi**2 + epsilon*gamma_a*gamma_s*mi + epsilon*gamma_s*gamma_as*mi - exp_value*gamma_a*gamma_s*mi - exp_value*gamma_s*gamma_as*mi + epsilon*gamma_a*gamma_s*v + epsilon*gamma_s*gamma_as*v + epsilon*gamma_a*mi*v + epsilon*gamma_s*mi*v + epsilon*gamma_as*mi*v - gamma_a*gamma_s*mi*v - gamma_s*gamma_as*mi*v - beta*epsilon*exp_value*mi**2 - beta*epsilon*exp_value*mi**3 - alpha*exp_value*gamma_a*mi**2 + alpha*exp_value*gamma_s*mi**2 + beta*exp_value*gamma_a*mi**2 + beta*exp_value*gamma_as*mi**2 + epsilon*gamma_a*gamma_s*mi**2 + epsilon*gamma_s*gamma_as*mi**2 + epsilon*gamma_a*mi**2*v + epsilon*gamma_s*mi**2*v + epsilon*gamma_as*mi**2*v + beta*exp_value*gamma_a*mi + beta*exp_value*gamma_as*mi - alpha*beta*exp_value*gamma_a*mi + alpha*beta*exp_value*gamma_s*mi - beta*epsilon*exp_value*gamma_a*mi - beta*epsilon*exp_value*gamma_as*mi + epsilon*gamma_a*gamma_s*mi*v + epsilon*gamma_s*gamma_as*mi*v - alpha*beta*exp_value*gamma_a*mi**2 + alpha*beta*exp_value*gamma_s*mi**2 - beta*epsilon*exp_value*gamma_a*mi**2 - beta*epsilon*exp_value*gamma_as*mi**2 + alpha*beta*epsilon*exp_value*gamma_a*mi**2 - alpha*beta*epsilon*exp_value*gamma_s*mi**2 + alpha*beta*epsilon*exp_value*gamma_a*mi - alpha*beta*epsilon*exp_value*gamma_s*mi))

        E2 = -((mi + 1)*(N*mi**3 + N*gamma_a*mi**2 + N*gamma_s*mi**2 + N*gamma_as*mi**2 + N*mi**2*v - N*beta*exp_value*mi**2 + N*gamma_a*gamma_s*mi + N*gamma_s*gamma_as*mi + N*gamma_a*gamma_s*v + N*gamma_s*gamma_as*v + N*gamma_a*mi*v + N*gamma_s*mi*v + N*gamma_as*mi*v - N*beta*exp_value*gamma_a*mi - N*beta*exp_value*gamma_as*mi + N*alpha*beta*exp_value*gamma_a*mi - N*alpha*beta*exp_value*gamma_s*mi)*(epsilon*mi**4 + epsilon*mi**5 + exp_value*mi**3*v + exp_value*mi**4*v + epsilon*gamma_a**2*gamma_s**2 + epsilon*gamma_s**2*gamma_as**2 - exp_value*gamma_a**2*gamma_s**2 - exp_value*gamma_s**2*gamma_as**2 - beta*exp_value**2*mi**3 - beta*exp_value**2*mi**4 + epsilon*gamma_a**2*mi**2 + epsilon*gamma_a**2*mi**3 + epsilon*gamma_s**2*mi**2 + epsilon*gamma_s**2*mi**3 + epsilon*gamma_as**2*mi**2 + epsilon*gamma_as**2*mi**3 - exp_value*gamma_s**2*mi**2 + exp_value**2*gamma_s*mi**3 + exp_value**2*gamma_a**2*gamma_s**2 + exp_value**2*gamma_s**2*gamma_as**2 + exp_value**2*gamma_s**2*mi**2 + beta*exp_value*mi**3 + beta*exp_value*mi**4 - epsilon*exp_value*mi**4 - epsilon*exp_value*mi**5 + 2*epsilon*gamma_a*mi**3 + 2*epsilon*gamma_a*mi**4 + 2*epsilon*gamma_s*mi**3 + 2*epsilon*gamma_s*mi**4 + 2*epsilon*gamma_as*mi**3 + 2*epsilon*gamma_as*mi**4 - exp_value*gamma_s*mi**3 + alpha*exp_value**2*gamma_a**2*mi**2 - alpha*exp_value**2*gamma_s**2*mi**2 - beta*exp_value**2*gamma_a**2*mi**2 - beta*exp_value**2*gamma_as**2*mi**2 + beta*exp_value*gamma_a**2*gamma_s + beta*exp_value*gamma_s*gamma_as**2 - beta*epsilon*exp_value*mi**3 - beta*epsilon*exp_value*mi**4 + 2*epsilon*gamma_a*gamma_s**2*gamma_as - 2*exp_value*gamma_a*gamma_s**2*gamma_as - alpha*exp_value*gamma_a*mi**3 + alpha*exp_value*gamma_s*mi**3 + 2*beta*exp_value*gamma_a*mi**2 + beta*exp_value*gamma_a**2*mi + 2*beta*exp_value*gamma_a*mi**3 + beta*exp_value*gamma_s*mi**2 + beta*exp_value*gamma_s*mi**3 + 2*beta*exp_value*gamma_as*mi**2 + beta*exp_value*gamma_as**2*mi + 2*beta*exp_value*gamma_as*mi**3 - 2*epsilon*exp_value*gamma_a*mi**3 - 2*epsilon*exp_value*gamma_a*mi**4 - 2*epsilon*exp_value*gamma_s*mi**3 - 2*epsilon*exp_value*gamma_s*mi**4 - 2*epsilon*exp_value*gamma_as*mi**3 - 2*epsilon*exp_value*gamma_as*mi**4 + 4*epsilon*gamma_a*gamma_s*mi**2 + 2*epsilon*gamma_a*gamma_s**2*mi + 2*epsilon*gamma_a**2*gamma_s*mi + 4*epsilon*gamma_a*gamma_s*mi**3 + 2*epsilon*gamma_a*gamma_as*mi**2 + 2*epsilon*gamma_a*gamma_as*mi**3 + 4*epsilon*gamma_s*gamma_as*mi**2 + 2*epsilon*gamma_s*gamma_as**2*mi + 2*epsilon*gamma_s**2*gamma_as*mi + 4*epsilon*gamma_s*gamma_as*mi**3 - 2*exp_value*gamma_a*gamma_s*mi**2 - 2*exp_value*gamma_a*gamma_s**2*mi - exp_value*gamma_a**2*gamma_s*mi - 2*exp_value*gamma_s*gamma_as*mi**2 - exp_value*gamma_s*gamma_as**2*mi - 2*exp_value*gamma_s**2*gamma_as*mi + exp_value*gamma_a**2*gamma_s*v + exp_value*gamma_s*gamma_as**2*v - epsilon*exp_value*mi**3*v - epsilon*exp_value*mi**4*v + 2*exp_value*gamma_a*mi**2*v + exp_value*gamma_a**2*mi*v + 2*exp_value*gamma_a*mi**3*v + exp_value*gamma_s*mi**2*v + 2*exp_value*gamma_s*mi**3*v + 2*exp_value*gamma_as*mi**2*v + exp_value*gamma_as**2*mi*v + 2*exp_value*gamma_as*mi**3*v - beta*exp_value**2*gamma_a**2*gamma_s - beta*exp_value**2*gamma_s*gamma_as**2 - epsilon*exp_value*gamma_a**2*gamma_s**2 - epsilon*exp_value*gamma_s**2*gamma_as**2 + beta*epsilon*exp_value**2*mi**3 + beta*epsilon*exp_value**2*mi**4 + 2*exp_value**2*gamma_a*gamma_s**2*gamma_as - alpha*exp_value*gamma_a**2*mi**2 + alpha*exp_value**2*gamma_a*mi**3 + alpha*exp_value*gamma_s**2*mi**2 - alpha*exp_value**2*gamma_s*mi**3 + beta*exp_value*gamma_a**2*mi**2 - 2*beta*exp_value**2*gamma_a*mi**2 - beta*exp_value**2*gamma_a**2*mi - 2*beta*exp_value**2*gamma_a*mi**3 - beta*exp_value**2*gamma_s*mi**2 - beta*exp_value**2*gamma_s*mi**3 + beta*exp_value*gamma_as**2*mi**2 - 2*beta*exp_value**2*gamma_as*mi**2 - beta*exp_value**2*gamma_as**2*mi - 2*beta*exp_value**2*gamma_as*mi**3 - epsilon*exp_value*gamma_a**2*mi**2 - epsilon*exp_value*gamma_a**2*mi**3 - epsilon*exp_value*gamma_s**2*mi**2 - epsilon*exp_value*gamma_s**2*mi**3 - epsilon*exp_value*gamma_as**2*mi**2 - epsilon*exp_value*gamma_as**2*mi**3 + 2*epsilon*gamma_a*gamma_s**2*mi**2 + 2*epsilon*gamma_a**2*gamma_s*mi**2 + epsilon*gamma_a**2*gamma_s**2*mi + 2*epsilon*gamma_s*gamma_as**2*mi**2 + 2*epsilon*gamma_s**2*gamma_as*mi**2 + epsilon*gamma_s**2*gamma_as**2*mi + 2*exp_value**2*gamma_a*gamma_s*mi**2 + 2*exp_value**2*gamma_a*gamma_s**2*mi + exp_value**2*gamma_a**2*gamma_s*mi + 2*exp_value**2*gamma_s*gamma_as*mi**2 + exp_value**2*gamma_s*gamma_as**2*mi + 2*exp_value**2*gamma_s**2*gamma_as*mi + exp_value*gamma_a**2*gamma_s**2*v + exp_value*gamma_s**2*gamma_as**2*v + exp_value*gamma_a**2*mi**2*v + exp_value*gamma_s**2*mi**2*v + exp_value*gamma_as**2*mi**2*v - alpha*beta*exp_value**2*gamma_a*gamma_s**2 + alpha*beta*exp_value**2*gamma_a**2*gamma_s - alpha*beta*exp_value**2*gamma_s**2*gamma_as + beta*epsilon*exp_value**2*gamma_a**2*gamma_s + beta*epsilon*exp_value**2*gamma_s*gamma_as**2 - alpha*beta*exp_value*gamma_a**2*mi**2 + alpha*beta*exp_value**2*gamma_a*mi**2 + alpha*beta*exp_value**2*gamma_a**2*mi + alpha*beta*exp_value**2*gamma_a*mi**3 + alpha*beta*exp_value*gamma_s**2*mi**2 - alpha*beta*exp_value**2*gamma_s*mi**2 - alpha*beta*exp_value**2*gamma_s**2*mi - alpha*beta*exp_value**2*gamma_s*mi**3 - beta*epsilon*exp_value*gamma_a**2*mi**2 + 2*beta*epsilon*exp_value**2*gamma_a*mi**2 + beta*epsilon*exp_value**2*gamma_a**2*mi + 2*beta*epsilon*exp_value**2*gamma_a*mi**3 + beta*epsilon*exp_value**2*gamma_s*mi**2 + beta*epsilon*exp_value**2*gamma_s*mi**3 - beta*epsilon*exp_value*gamma_as**2*mi**2 + 2*beta*epsilon*exp_value**2*gamma_as*mi**2 + beta*epsilon*exp_value**2*gamma_as**2*mi + 2*beta*epsilon*exp_value**2*gamma_as*mi**3 - alpha*exp_value**2*gamma_a*gamma_s**2*mi + alpha*exp_value**2*gamma_a**2*gamma_s*mi + alpha*exp_value**2*gamma_a*gamma_as*mi**2 - alpha*exp_value**2*gamma_s*gamma_as*mi**2 - alpha*exp_value**2*gamma_s**2*gamma_as*mi - 2*beta*exp_value**2*gamma_a*gamma_s*mi**2 - beta*exp_value**2*gamma_a**2*gamma_s*mi - 2*beta*exp_value**2*gamma_a*gamma_as*mi**2 - 2*beta*exp_value**2*gamma_s*gamma_as*mi**2 - beta*exp_value**2*gamma_s*gamma_as**2*mi - 2*epsilon*exp_value*gamma_a*gamma_s**2*mi**2 - 2*epsilon*exp_value*gamma_a**2*gamma_s*mi**2 - epsilon*exp_value*gamma_a**2*gamma_s**2*mi - 2*epsilon*exp_value*gamma_s*gamma_as**2*mi**2 - 2*epsilon*exp_value*gamma_s**2*gamma_as*mi**2 - epsilon*exp_value*gamma_s**2*gamma_as**2*mi - epsilon*exp_value*gamma_a**2*gamma_s**2*v - epsilon*exp_value*gamma_s**2*gamma_as**2*v - epsilon*exp_value*gamma_a**2*mi**2*v - epsilon*exp_value*gamma_s**2*mi**2*v - epsilon*exp_value*gamma_as**2*mi**2*v + 2*beta*exp_value*gamma_a*gamma_s*gamma_as + 2*beta*exp_value*gamma_a*gamma_s*mi + 2*beta*exp_value*gamma_a*gamma_as*mi + 2*beta*exp_value*gamma_s*gamma_as*mi + 4*epsilon*gamma_a*gamma_s*gamma_as*mi - 2*exp_value*gamma_a*gamma_s*gamma_as*mi + 2*exp_value*gamma_a*gamma_s*gamma_as*v + 2*exp_value*gamma_a*gamma_s*mi*v + 2*exp_value*gamma_a*gamma_as*mi*v + 2*exp_value*gamma_s*gamma_as*mi*v + alpha*beta*exp_value**2*gamma_a**2*mi**2 - alpha*beta*exp_value**2*gamma_s**2*mi**2 + beta*epsilon*exp_value**2*gamma_a**2*mi**2 + beta*epsilon*exp_value**2*gamma_as**2*mi**2 + alpha*beta*exp_value*gamma_a*gamma_s**2 - alpha*beta*exp_value*gamma_a**2*gamma_s + alpha*beta*exp_value*gamma_s**2*gamma_as - beta*epsilon*exp_value*gamma_a**2*gamma_s - beta*epsilon*exp_value*gamma_s*gamma_as**2 - 2*beta*exp_value**2*gamma_a*gamma_s*gamma_as - alpha*beta*exp_value*gamma_a*mi**2 - alpha*beta*exp_value*gamma_a**2*mi - alpha*beta*exp_value*gamma_a*mi**3 + alpha*beta*exp_value*gamma_s*mi**2 + alpha*beta*exp_value*gamma_s**2*mi + alpha*beta*exp_value*gamma_s*mi**3 - 2*epsilon*exp_value*gamma_a*gamma_s**2*gamma_as - 2*beta*epsilon*exp_value*gamma_a*mi**2 - beta*epsilon*exp_value*gamma_a**2*mi - 2*beta*epsilon*exp_value*gamma_a*mi**3 - beta*epsilon*exp_value*gamma_s*mi**2 - beta*epsilon*exp_value*gamma_s*mi**3 - 2*beta*epsilon*exp_value*gamma_as*mi**2 - beta*epsilon*exp_value*gamma_as**2*mi - 2*beta*epsilon*exp_value*gamma_as*mi**3 + alpha*exp_value*gamma_a*gamma_s**2*mi - alpha*exp_value*gamma_a**2*gamma_s*mi - alpha*exp_value*gamma_a*gamma_as*mi**2 + alpha*exp_value*gamma_s*gamma_as*mi**2 + alpha*exp_value*gamma_s**2*gamma_as*mi + 2*beta*exp_value*gamma_a*gamma_s*mi**2 + beta*exp_value*gamma_a**2*gamma_s*mi - 2*beta*exp_value**2*gamma_a*gamma_s*mi + 2*beta*exp_value*gamma_a*gamma_as*mi**2 - 2*beta*exp_value**2*gamma_a*gamma_as*mi + 2*beta*exp_value*gamma_s*gamma_as*mi**2 + beta*exp_value*gamma_s*gamma_as**2*mi - 2*beta*exp_value**2*gamma_s*gamma_as*mi - 4*epsilon*exp_value*gamma_a*gamma_s*mi**2 - 2*epsilon*exp_value*gamma_a*gamma_s**2*mi - 2*epsilon*exp_value*gamma_a**2*gamma_s*mi - 4*epsilon*exp_value*gamma_a*gamma_s*mi**3 - 2*epsilon*exp_value*gamma_a*gamma_as*mi**2 - 2*epsilon*exp_value*gamma_a*gamma_as*mi**3 - 4*epsilon*exp_value*gamma_s*gamma_as*mi**2 - 2*epsilon*exp_value*gamma_s*gamma_as**2*mi - 2*epsilon*exp_value*gamma_s**2*gamma_as*mi - 4*epsilon*exp_value*gamma_s*gamma_as*mi**3 + 4*epsilon*gamma_a*gamma_s*gamma_as*mi**2 + 2*epsilon*gamma_a*gamma_s**2*gamma_as*mi + 2*exp_value**2*gamma_a*gamma_s*gamma_as*mi + alpha*exp_value*gamma_a*gamma_s**2*v - alpha*exp_value*gamma_a**2*gamma_s*v + alpha*exp_value*gamma_s**2*gamma_as*v - epsilon*exp_value*gamma_a**2*gamma_s*v - epsilon*exp_value*gamma_s*gamma_as**2*v + 2*exp_value*gamma_a*gamma_s**2*gamma_as*v - alpha*exp_value*gamma_a*mi**2*v - alpha*exp_value*gamma_a**2*mi*v + alpha*exp_value*gamma_s*mi**2*v + alpha*exp_value*gamma_s**2*mi*v - 2*epsilon*exp_value*gamma_a*mi**2*v - epsilon*exp_value*gamma_a**2*mi*v - 2*epsilon*exp_value*gamma_a*mi**3*v - epsilon*exp_value*gamma_s*mi**2*v - 2*epsilon*exp_value*gamma_s*mi**3*v - 2*epsilon*exp_value*gamma_as*mi**2*v - epsilon*exp_value*gamma_as**2*mi*v - 2*epsilon*exp_value*gamma_as*mi**3*v + 4*exp_value*gamma_a*gamma_s*mi**2*v + 2*exp_value*gamma_a*gamma_s**2*mi*v + 2*exp_value*gamma_a**2*gamma_s*mi*v + 2*exp_value*gamma_a*gamma_as*mi**2*v + 4*exp_value*gamma_s*gamma_as*mi**2*v + 2*exp_value*gamma_s*gamma_as**2*mi*v + 2*exp_value*gamma_s**2*gamma_as*mi*v - alpha*beta*epsilon*exp_value*gamma_a*gamma_s**2 + alpha*beta*epsilon*exp_value*gamma_a**2*gamma_s - alpha*beta*epsilon*exp_value*gamma_s**2*gamma_as + alpha*beta*exp_value**2*gamma_a*gamma_s*gamma_as + 2*beta*epsilon*exp_value**2*gamma_a*gamma_s*gamma_as + alpha*beta*epsilon*exp_value*gamma_a*mi**2 + alpha*beta*epsilon*exp_value*gamma_a**2*mi + alpha*beta*epsilon*exp_value*gamma_a*mi**3 - alpha*beta*epsilon*exp_value*gamma_s*mi**2 - alpha*beta*epsilon*exp_value*gamma_s**2*mi - alpha*beta*epsilon*exp_value*gamma_s*mi**3 + alpha*beta*exp_value*gamma_a*gamma_s**2*mi - alpha*beta*exp_value*gamma_a**2*gamma_s*mi - alpha*beta*exp_value*gamma_a*gamma_as*mi**2 + alpha*beta*exp_value**2*gamma_a*gamma_as*mi + alpha*beta*exp_value*gamma_s*gamma_as*mi**2 + alpha*beta*exp_value*gamma_s**2*gamma_as*mi - alpha*beta*exp_value**2*gamma_s*gamma_as*mi - 2*beta*epsilon*exp_value*gamma_a*gamma_s*mi**2 - beta*epsilon*exp_value*gamma_a**2*gamma_s*mi + 2*beta*epsilon*exp_value**2*gamma_a*gamma_s*mi - 2*beta*epsilon*exp_value*gamma_a*gamma_as*mi**2 + 2*beta*epsilon*exp_value**2*gamma_a*gamma_as*mi - 2*beta*epsilon*exp_value*gamma_s*gamma_as*mi**2 - beta*epsilon*exp_value*gamma_s*gamma_as**2*mi + 2*beta*epsilon*exp_value**2*gamma_s*gamma_as*mi + alpha*exp_value**2*gamma_a*gamma_s*gamma_as*mi - 2*beta*exp_value**2*gamma_a*gamma_s*gamma_as*mi - 4*epsilon*exp_value*gamma_a*gamma_s*gamma_as*mi**2 - 2*epsilon*exp_value*gamma_a*gamma_s**2*gamma_as*mi - alpha*epsilon*exp_value*gamma_a*gamma_s**2*v + alpha*epsilon*exp_value*gamma_a**2*gamma_s*v - alpha*epsilon*exp_value*gamma_s**2*gamma_as*v - 2*epsilon*exp_value*gamma_a*gamma_s**2*gamma_as*v + alpha*epsilon*exp_value*gamma_a*mi**2*v + alpha*epsilon*exp_value*gamma_a**2*mi*v - alpha*epsilon*exp_value*gamma_s*mi**2*v - alpha*epsilon*exp_value*gamma_s**2*mi*v - 4*epsilon*exp_value*gamma_a*gamma_s*mi**2*v - 2*epsilon*exp_value*gamma_a*gamma_s**2*mi*v - 2*epsilon*exp_value*gamma_a**2*gamma_s*mi*v - 2*epsilon*exp_value*gamma_a*gamma_as*mi**2*v - 4*epsilon*exp_value*gamma_s*gamma_as*mi**2*v - 2*epsilon*exp_value*gamma_s*gamma_as**2*mi*v - 2*epsilon*exp_value*gamma_s**2*gamma_as*mi*v + alpha*beta*epsilon*exp_value**2*gamma_a*gamma_s**2 - alpha*beta*epsilon*exp_value**2*gamma_a**2*gamma_s + alpha*beta*epsilon*exp_value**2*gamma_s**2*gamma_as + alpha*beta*epsilon*exp_value*gamma_a**2*mi**2 - alpha*beta*epsilon*exp_value**2*gamma_a*mi**2 - alpha*beta*epsilon*exp_value**2*gamma_a**2*mi - alpha*beta*epsilon*exp_value**2*gamma_a*mi**3 - alpha*beta*epsilon*exp_value*gamma_s**2*mi**2 + alpha*beta*epsilon*exp_value**2*gamma_s*mi**2 + alpha*beta*epsilon*exp_value**2*gamma_s**2*mi + alpha*beta*epsilon*exp_value**2*gamma_s*mi**3 - alpha*beta*exp_value**2*gamma_a*gamma_s**2*mi + alpha*beta*exp_value**2*gamma_a**2*gamma_s*mi + alpha*beta*exp_value**2*gamma_a*gamma_as*mi**2 - alpha*beta*exp_value**2*gamma_s*gamma_as*mi**2 - alpha*beta*exp_value**2*gamma_s**2*gamma_as*mi + 2*beta*epsilon*exp_value**2*gamma_a*gamma_s*mi**2 + beta*epsilon*exp_value**2*gamma_a**2*gamma_s*mi + 2*beta*epsilon*exp_value**2*gamma_a*gamma_as*mi**2 + 2*beta*epsilon*exp_value**2*gamma_s*gamma_as*mi**2 + beta*epsilon*exp_value**2*gamma_s*gamma_as**2*mi - alpha*beta*exp_value*gamma_a*gamma_s*gamma_as - 2*beta*epsilon*exp_value*gamma_a*gamma_s*gamma_as - alpha*beta*exp_value*gamma_a*gamma_as*mi + alpha*beta*exp_value*gamma_s*gamma_as*mi - 2*beta*epsilon*exp_value*gamma_a*gamma_s*mi - 2*beta*epsilon*exp_value*gamma_a*gamma_as*mi - 2*beta*epsilon*exp_value*gamma_s*gamma_as*mi - alpha*exp_value*gamma_a*gamma_s*gamma_as*mi + 2*beta*exp_value*gamma_a*gamma_s*gamma_as*mi - 4*epsilon*exp_value*gamma_a*gamma_s*gamma_as*mi - alpha*exp_value*gamma_a*gamma_s*gamma_as*v - 2*epsilon*exp_value*gamma_a*gamma_s*gamma_as*v - alpha*exp_value*gamma_a*gamma_as*mi*v + alpha*exp_value*gamma_s*gamma_as*mi*v - 2*epsilon*exp_value*gamma_a*gamma_s*mi*v - 2*epsilon*exp_value*gamma_a*gamma_as*mi*v - 2*epsilon*exp_value*gamma_s*gamma_as*mi*v + 4*exp_value*gamma_a*gamma_s*gamma_as*mi*v - alpha*beta*epsilon*exp_value**2*gamma_a**2*mi**2 + alpha*beta*epsilon*exp_value**2*gamma_s**2*mi**2 + alpha*beta*epsilon*exp_value*gamma_a*gamma_s*gamma_as + alpha*beta*epsilon*exp_value*gamma_a*gamma_as*mi - alpha*beta*epsilon*exp_value*gamma_s*gamma_as*mi - alpha*beta*exp_value*gamma_a*gamma_s*gamma_as*mi - 2*beta*epsilon*exp_value*gamma_a*gamma_s*gamma_as*mi + alpha*epsilon*exp_value*gamma_a*gamma_s*gamma_as*v + alpha*epsilon*exp_value*gamma_a*gamma_as*mi*v - alpha*epsilon*exp_value*gamma_s*gamma_as*mi*v - 4*epsilon*exp_value*gamma_a*gamma_s*gamma_as*mi*v - alpha*beta*epsilon*exp_value**2*gamma_a*gamma_s*gamma_as - alpha*beta*epsilon*exp_value*gamma_a*gamma_s**2*mi + alpha*beta*epsilon*exp_value*gamma_a**2*gamma_s*mi + alpha*beta*epsilon*exp_value*gamma_a*gamma_as*mi**2 - alpha*beta*epsilon*exp_value**2*gamma_a*gamma_as*mi - alpha*beta*epsilon*exp_value*gamma_s*gamma_as*mi**2 - alpha*beta*epsilon*exp_value*gamma_s**2*gamma_as*mi + alpha*beta*epsilon*exp_value**2*gamma_s*gamma_as*mi + alpha*beta*exp_value**2*gamma_a*gamma_s*gamma_as*mi + 2*beta*epsilon*exp_value**2*gamma_a*gamma_s*gamma_as*mi + alpha*beta*epsilon*exp_value**2*gamma_a*gamma_s**2*mi - alpha*beta*epsilon*exp_value**2*gamma_a**2*gamma_s*mi - alpha*beta*epsilon*exp_value**2*gamma_a*gamma_as*mi**2 + alpha*beta*epsilon*exp_value**2*gamma_s*gamma_as*mi**2 + alpha*beta*epsilon*exp_value**2*gamma_s**2*gamma_as*mi + alpha*beta*epsilon*exp_value*gamma_a*gamma_s*gamma_as*mi - alpha*beta*epsilon*exp_value**2*gamma_a*gamma_s*gamma_as*mi))/(exp_value*(epsilon*mi**3 + epsilon*mi**4 - mi**2*v - mi**3*v + epsilon*mi**2*v + epsilon*mi**3*v - gamma_a*mi**2*v - gamma_s*mi**2*v - gamma_as*mi**2*v - gamma_a*gamma_s*v - gamma_s*gamma_as*v - gamma_a*mi*v - gamma_s*mi*v - gamma_as*mi*v + beta*exp_value*mi**2 + beta*exp_value*mi**3 + epsilon*gamma_a*mi**2 + epsilon*gamma_a*mi**3 + epsilon*gamma_s*mi**2 + epsilon*gamma_s*mi**3 + epsilon*gamma_as*mi**2 + epsilon*gamma_as*mi**3 - exp_value*gamma_s*mi**2 + epsilon*gamma_a*gamma_s*mi + epsilon*gamma_s*gamma_as*mi - exp_value*gamma_a*gamma_s*mi - exp_value*gamma_s*gamma_as*mi + epsilon*gamma_a*gamma_s*v + epsilon*gamma_s*gamma_as*v + epsilon*gamma_a*mi*v + epsilon*gamma_s*mi*v + epsilon*gamma_as*mi*v - gamma_a*gamma_s*mi*v - gamma_s*gamma_as*mi*v - beta*epsilon*exp_value*mi**2 - beta*epsilon*exp_value*mi**3 - alpha*exp_value*gamma_a*mi**2 + alpha*exp_value*gamma_s*mi**2 + beta*exp_value*gamma_a*mi**2 + beta*exp_value*gamma_as*mi**2 + epsilon*gamma_a*gamma_s*mi**2 + epsilon*gamma_s*gamma_as*mi**2 + epsilon*gamma_a*mi**2*v + epsilon*gamma_s*mi**2*v + epsilon*gamma_as*mi**2*v + beta*exp_value*gamma_a*mi + beta*exp_value*gamma_as*mi - alpha*beta*exp_value*gamma_a*mi + alpha*beta*exp_value*gamma_s*mi - beta*epsilon*exp_value*gamma_a*mi - beta*epsilon*exp_value*gamma_as*mi + epsilon*gamma_a*gamma_s*mi*v + epsilon*gamma_s*gamma_as*mi*v - alpha*beta*exp_value*gamma_a*mi**2 + alpha*beta*exp_value*gamma_s*mi**2 - beta*epsilon*exp_value*gamma_a*mi**2 - beta*epsilon*exp_value*gamma_as*mi**2 + alpha*beta*epsilon*exp_value*gamma_a*mi**2 - alpha*beta*epsilon*exp_value*gamma_s*mi**2 + alpha*beta*epsilon*exp_value*gamma_a*mi - alpha*beta*epsilon*exp_value*gamma_s*mi)*(beta*mi**3 + beta*mi**4 + beta*gamma_a**2*mi**2 + beta*gamma_as**2*mi**2 + beta*gamma_a**2*gamma_s + beta*gamma_s*gamma_as**2 + 2*beta*gamma_a*mi**2 + beta*gamma_a**2*mi + 2*beta*gamma_a*mi**3 + beta*gamma_s*mi**2 + beta*gamma_s*mi**3 + 2*beta*gamma_as*mi**2 + beta*gamma_as**2*mi + 2*beta*gamma_as*mi**3 + alpha*beta*gamma_a*gamma_s**2 - alpha*beta*gamma_a**2*gamma_s + alpha*beta*gamma_s**2*gamma_as - beta*exp_value*gamma_a**2*gamma_s - beta*exp_value*gamma_s*gamma_as**2 - alpha*beta*gamma_a*mi**2 - alpha*beta*gamma_a**2*mi - alpha*beta*gamma_a*mi**3 + alpha*beta*gamma_s*mi**2 + alpha*beta*gamma_s**2*mi + alpha*beta*gamma_s*mi**3 - beta*exp_value*gamma_s*mi**2 + 2*beta*gamma_a*gamma_s*mi**2 + beta*gamma_a**2*gamma_s*mi + 2*beta*gamma_a*gamma_as*mi**2 + 2*beta*gamma_s*gamma_as*mi**2 + beta*gamma_s*gamma_as**2*mi - alpha*beta*gamma_a**2*mi**2 + alpha*beta*gamma_s**2*mi**2 + 2*beta*gamma_a*gamma_s*gamma_as + 2*beta*gamma_a*gamma_s*mi + 2*beta*gamma_a*gamma_as*mi + 2*beta*gamma_s*gamma_as*mi + alpha**2*beta*exp_value*gamma_a**2*mi + alpha**2*beta*exp_value*gamma_s**2*mi - alpha*beta*gamma_a*gamma_s*gamma_as - 2*beta*exp_value*gamma_a*gamma_s*gamma_as - alpha*beta*gamma_a*gamma_as*mi + alpha*beta*gamma_s*gamma_as*mi - 2*beta*exp_value*gamma_a*gamma_s*mi - 2*beta*exp_value*gamma_s*gamma_as*mi + 2*beta*gamma_a*gamma_s*gamma_as*mi - alpha*beta*exp_value*gamma_a*gamma_s**2 + alpha*beta*exp_value*gamma_a**2*gamma_s - alpha*beta*exp_value*gamma_s**2*gamma_as - alpha*beta*exp_value*gamma_a*mi**2 - alpha*beta*exp_value*gamma_a**2*mi + alpha*beta*exp_value*gamma_s*mi**2 - alpha*beta*exp_value*gamma_s**2*mi + alpha*beta*gamma_a*gamma_s**2*mi - alpha*beta*gamma_a**2*gamma_s*mi - alpha*beta*gamma_a*gamma_as*mi**2 + alpha*beta*gamma_s*gamma_as*mi**2 + alpha*beta*gamma_s**2*gamma_as*mi - 2*alpha**2*beta*exp_value*gamma_a*gamma_s*mi + alpha*beta*exp_value*gamma_a*gamma_s*gamma_as + 2*alpha*beta*exp_value*gamma_a*gamma_s*mi - alpha*beta*exp_value*gamma_a*gamma_as*mi + alpha*beta*exp_value*gamma_s*gamma_as*mi - alpha*beta*gamma_a*gamma_s*gamma_as*mi))

        A2 = -((alpha*gamma_s + alpha*mi + alpha*mi**2 + alpha*gamma_s*mi)*(N*mi**3 + N*gamma_a*mi**2 + N*gamma_s*mi**2 + N*gamma_as*mi**2 + N*mi**2*v - N*beta*exp_value*mi**2 + N*gamma_a*gamma_s*mi + N*gamma_s*gamma_as*mi + N*gamma_a*gamma_s*v + N*gamma_s*gamma_as*v + N*gamma_a*mi*v + N*gamma_s*mi*v + N*gamma_as*mi*v - N*beta*exp_value*gamma_a*mi - N*beta*exp_value*gamma_as*mi + N*alpha*beta*exp_value*gamma_a*mi - N*alpha*beta*exp_value*gamma_s*mi))/(beta*mi**3 + beta*mi**4 + beta*gamma_a**2*mi**2 + beta*gamma_as**2*mi**2 + beta*gamma_a**2*gamma_s + beta*gamma_s*gamma_as**2 + 2*beta*gamma_a*mi**2 + beta*gamma_a**2*mi + 2*beta*gamma_a*mi**3 + beta*gamma_s*mi**2 + beta*gamma_s*mi**3 + 2*beta*gamma_as*mi**2 + beta*gamma_as**2*mi + 2*beta*gamma_as*mi**3 + alpha*beta*gamma_a*gamma_s**2 - alpha*beta*gamma_a**2*gamma_s + alpha*beta*gamma_s**2*gamma_as - beta*exp_value*gamma_a**2*gamma_s - beta*exp_value*gamma_s*gamma_as**2 - alpha*beta*gamma_a*mi**2 - alpha*beta*gamma_a**2*mi - alpha*beta*gamma_a*mi**3 + alpha*beta*gamma_s*mi**2 + alpha*beta*gamma_s**2*mi + alpha*beta*gamma_s*mi**3 - beta*exp_value*gamma_s*mi**2 + 2*beta*gamma_a*gamma_s*mi**2 + beta*gamma_a**2*gamma_s*mi + 2*beta*gamma_a*gamma_as*mi**2 + 2*beta*gamma_s*gamma_as*mi**2 + beta*gamma_s*gamma_as**2*mi - alpha*beta*gamma_a**2*mi**2 + alpha*beta*gamma_s**2*mi**2 + 2*beta*gamma_a*gamma_s*gamma_as + 2*beta*gamma_a*gamma_s*mi + 2*beta*gamma_a*gamma_as*mi + 2*beta*gamma_s*gamma_as*mi + alpha**2*beta*exp_value*gamma_a**2*mi + alpha**2*beta*exp_value*gamma_s**2*mi - alpha*beta*gamma_a*gamma_s*gamma_as - 2*beta*exp_value*gamma_a*gamma_s*gamma_as - alpha*beta*gamma_a*gamma_as*mi + alpha*beta*gamma_s*gamma_as*mi - 2*beta*exp_value*gamma_a*gamma_s*mi - 2*beta*exp_value*gamma_s*gamma_as*mi + 2*beta*gamma_a*gamma_s*gamma_as*mi - alpha*beta*exp_value*gamma_a*gamma_s**2 + alpha*beta*exp_value*gamma_a**2*gamma_s - alpha*beta*exp_value*gamma_s**2*gamma_as - alpha*beta*exp_value*gamma_a*mi**2 - alpha*beta*exp_value*gamma_a**2*mi + alpha*beta*exp_value*gamma_s*mi**2 - alpha*beta*exp_value*gamma_s**2*mi + alpha*beta*gamma_a*gamma_s**2*mi - alpha*beta*gamma_a**2*gamma_s*mi - alpha*beta*gamma_a*gamma_as*mi**2 + alpha*beta*gamma_s*gamma_as*mi**2 + alpha*beta*gamma_s**2*gamma_as*mi - 2*alpha**2*beta*exp_value*gamma_a*gamma_s*mi + alpha*beta*exp_value*gamma_a*gamma_s*gamma_as + 2*alpha*beta*exp_value*gamma_a*gamma_s*mi - alpha*beta*exp_value*gamma_a*gamma_as*mi + alpha*beta*exp_value*gamma_s*gamma_as*mi - alpha*beta*gamma_a*gamma_s*gamma_as*mi)

        I2 = -((gamma_a + gamma_as + mi - alpha*gamma_a - alpha*mi + gamma_a*mi + gamma_as*mi - alpha*mi**2 + mi**2 - alpha*gamma_a*mi)*(N*mi**3 + N*gamma_a*mi**2 + N*gamma_s*mi**2 + N*gamma_as*mi**2 + N*mi**2*v - N*beta*exp_value*mi**2 + N*gamma_a*gamma_s*mi + N*gamma_s*gamma_as*mi + N*gamma_a*gamma_s*v + N*gamma_s*gamma_as*v + N*gamma_a*mi*v + N*gamma_s*mi*v + N*gamma_as*mi*v - N*beta*exp_value*gamma_a*mi - N*beta*exp_value*gamma_as*mi + N*alpha*beta*exp_value*gamma_a*mi - N*alpha*beta*exp_value*gamma_s*mi))/(beta*mi**3 + beta*mi**4 + beta*gamma_a**2*mi**2 + beta*gamma_as**2*mi**2 + beta*gamma_a**2*gamma_s + beta*gamma_s*gamma_as**2 + 2*beta*gamma_a*mi**2 + beta*gamma_a**2*mi + 2*beta*gamma_a*mi**3 + beta*gamma_s*mi**2 + beta*gamma_s*mi**3 + 2*beta*gamma_as*mi**2 + beta*gamma_as**2*mi + 2*beta*gamma_as*mi**3 + alpha*beta*gamma_a*gamma_s**2 - alpha*beta*gamma_a**2*gamma_s + alpha*beta*gamma_s**2*gamma_as - beta*exp_value*gamma_a**2*gamma_s - beta*exp_value*gamma_s*gamma_as**2 - alpha*beta*gamma_a*mi**2 - alpha*beta*gamma_a**2*mi - alpha*beta*gamma_a*mi**3 + alpha*beta*gamma_s*mi**2 + alpha*beta*gamma_s**2*mi + alpha*beta*gamma_s*mi**3 - beta*exp_value*gamma_s*mi**2 + 2*beta*gamma_a*gamma_s*mi**2 + beta*gamma_a**2*gamma_s*mi + 2*beta*gamma_a*gamma_as*mi**2 + 2*beta*gamma_s*gamma_as*mi**2 + beta*gamma_s*gamma_as**2*mi - alpha*beta*gamma_a**2*mi**2 + alpha*beta*gamma_s**2*mi**2 + 2*beta*gamma_a*gamma_s*gamma_as + 2*beta*gamma_a*gamma_s*mi + 2*beta*gamma_a*gamma_as*mi + 2*beta*gamma_s*gamma_as*mi + alpha**2*beta*exp_value*gamma_a**2*mi + alpha**2*beta*exp_value*gamma_s**2*mi - alpha*beta*gamma_a*gamma_s*gamma_as - 2*beta*exp_value*gamma_a*gamma_s*gamma_as - alpha*beta*gamma_a*gamma_as*mi + alpha*beta*gamma_s*gamma_as*mi - 2*beta*exp_value*gamma_a*gamma_s*mi - 2*beta*exp_value*gamma_s*gamma_as*mi + 2*beta*gamma_a*gamma_s*gamma_as*mi - alpha*beta*exp_value*gamma_a*gamma_s**2 + alpha*beta*exp_value*gamma_a**2*gamma_s - alpha*beta*exp_value*gamma_s**2*gamma_as - alpha*beta*exp_value*gamma_a*mi**2 - alpha*beta*exp_value*gamma_a**2*mi + alpha*beta*exp_value*gamma_s*mi**2 - alpha*beta*exp_value*gamma_s**2*mi + alpha*beta*gamma_a*gamma_s**2*mi - alpha*beta*gamma_a**2*gamma_s*mi - alpha*beta*gamma_a*gamma_as*mi**2 + alpha*beta*gamma_s*gamma_as*mi**2 + alpha*beta*gamma_s**2*gamma_as*mi - 2*alpha**2*beta*exp_value*gamma_a*gamma_s*mi + alpha*beta*exp_value*gamma_a*gamma_s*gamma_as + 2*alpha*beta*exp_value*gamma_a*gamma_s*mi - alpha*beta*exp_value*gamma_a*gamma_as*mi + alpha*beta*exp_value*gamma_s*gamma_as*mi - alpha*beta*gamma_a*gamma_s*gamma_as*mi)

        A2 = -((alpha*gamma_s + alpha*mi + alpha*mi**2 + alpha*gamma_s*mi)*(N*mi**3 + N*gamma_a*mi**2 + N*gamma_s*mi**2 + N*gamma_as*mi**2 + N*mi**2*v - N*beta*exp_value*mi**2 + N*gamma_a*gamma_s*mi + N*gamma_s*gamma_as*mi + N*gamma_a*gamma_s*v + N*gamma_s*gamma_as*v + N*gamma_a*mi*v + N*gamma_s*mi*v + N*gamma_as*mi*v - N*beta*exp_value*gamma_a*mi - N*beta*exp_value*gamma_as*mi + N*alpha*beta*exp_value*gamma_a*mi - N*alpha*beta*exp_value*gamma_s*mi))/(beta*mi**3 + beta*mi**4 + beta*gamma_a**2*mi**2 + beta*gamma_as**2*mi**2 + beta*gamma_a**2*gamma_s + beta*gamma_s*gamma_as**2 + 2*beta*gamma_a*mi**2 + beta*gamma_a**2*mi + 2*beta*gamma_a*mi**3 + beta*gamma_s*mi**2 + beta*gamma_s*mi**3 + 2*beta*gamma_as*mi**2 + beta*gamma_as**2*mi + 2*beta*gamma_as*mi**3 + alpha*beta*gamma_a*gamma_s**2 - alpha*beta*gamma_a**2*gamma_s + alpha*beta*gamma_s**2*gamma_as - beta*exp_value*gamma_a**2*gamma_s - beta*exp_value*gamma_s*gamma_as**2 - alpha*beta*gamma_a*mi**2 - alpha*beta*gamma_a**2*mi - alpha*beta*gamma_a*mi**3 + alpha*beta*gamma_s*mi**2 + alpha*beta*gamma_s**2*mi + alpha*beta*gamma_s*mi**3 - beta*exp_value*gamma_s*mi**2 + 2*beta*gamma_a*gamma_s*mi**2 + beta*gamma_a**2*gamma_s*mi + 2*beta*gamma_a*gamma_as*mi**2 + 2*beta*gamma_s*gamma_as*mi**2 + beta*gamma_s*gamma_as**2*mi - alpha*beta*gamma_a**2*mi**2 + alpha*beta*gamma_s**2*mi**2 + 2*beta*gamma_a*gamma_s*gamma_as + 2*beta*gamma_a*gamma_s*mi + 2*beta*gamma_a*gamma_as*mi + 2*beta*gamma_s*gamma_as*mi + alpha**2*beta*exp_value*gamma_a**2*mi + alpha**2*beta*exp_value*gamma_s**2*mi - alpha*beta*gamma_a*gamma_s*gamma_as - 2*beta*exp_value*gamma_a*gamma_s*gamma_as - alpha*beta*gamma_a*gamma_as*mi + alpha*beta*gamma_s*gamma_as*mi - 2*beta*exp_value*gamma_a*gamma_s*mi - 2*beta*exp_value*gamma_s*gamma_as*mi + 2*beta*gamma_a*gamma_s*gamma_as*mi - alpha*beta*exp_value*gamma_a*gamma_s**2 + alpha*beta*exp_value*gamma_a**2*gamma_s - alpha*beta*exp_value*gamma_s**2*gamma_as - alpha*beta*exp_value*gamma_a*mi**2 - alpha*beta*exp_value*gamma_a**2*mi + alpha*beta*exp_value*gamma_s*mi**2 - alpha*beta*exp_value*gamma_s**2*mi + alpha*beta*gamma_a*gamma_s**2*mi - alpha*beta*gamma_a**2*gamma_s*mi - alpha*beta*gamma_a*gamma_as*mi**2 + alpha*beta*gamma_s*gamma_as*mi**2 + alpha*beta*gamma_s**2*gamma_as*mi - 2*alpha**2*beta*exp_value*gamma_a*gamma_s*mi + alpha*beta*exp_value*gamma_a*gamma_s*gamma_as + 2*alpha*beta*exp_value*gamma_a*gamma_s*mi - alpha*beta*exp_value*gamma_a*gamma_as*mi + alpha*beta*exp_value*gamma_s*gamma_as*mi - alpha*beta*gamma_a*gamma_s*gamma_as*mi)

        R2 = -(N*gamma_s**2*mi**3 + N*gamma_s*mi**4 + N*alpha*gamma_a*mi**4 - N*alpha*gamma_s*mi**4 + 2*N*gamma_a*gamma_s*mi**3 + 2*N*gamma_s*gamma_as*mi**3 + N*gamma_s*mi**3*v + N*alpha*gamma_a**2*mi**3 - N*alpha*gamma_s**2*mi**3 + 2*N*gamma_a*gamma_s**2*mi**2 + N*gamma_a**2*gamma_s*mi**2 + N*gamma_a**2*gamma_s**2*mi + N*gamma_s*gamma_as**2*mi**2 + 2*N*gamma_s**2*gamma_as*mi**2 + N*gamma_s**2*gamma_as**2*mi + N*gamma_a**2*gamma_s**2*v + N*gamma_s**2*gamma_as**2*v + N*gamma_s**2*mi**2*v - N*alpha*gamma_a*gamma_s**2*mi**2 + N*alpha*gamma_a**2*gamma_s*mi**2 - N*alpha*gamma_s**2*gamma_as*mi**2 + N*alpha*gamma_a**2*mi**2*v - N*alpha*gamma_s**2*mi**2*v - N*beta*exp_value*gamma_s*mi**3 + N*alpha*gamma_a*gamma_as*mi**3 - N*alpha*gamma_s*gamma_as*mi**3 + 2*N*gamma_a*gamma_s*gamma_as*mi**2 + 2*N*gamma_a*gamma_s**2*gamma_as*mi + 2*N*gamma_a*gamma_s**2*gamma_as*v + N*alpha*gamma_a*mi**3*v - N*alpha*gamma_s*mi**3*v + 2*N*gamma_a*gamma_s*mi**2*v + 2*N*gamma_a*gamma_s**2*mi*v + N*gamma_a**2*gamma_s*mi*v + 2*N*gamma_s*gamma_as*mi**2*v + N*gamma_s*gamma_as**2*mi*v + 2*N*gamma_s**2*gamma_as*mi*v - N*alpha*beta*exp_value*gamma_a*mi**3 + N*alpha*beta*exp_value*gamma_s*mi**3 - 2*N*beta*exp_value*gamma_a*gamma_s*mi**2 - N*beta*exp_value*gamma_a**2*gamma_s*mi - 2*N*beta*exp_value*gamma_s*gamma_as*mi**2 - N*beta*exp_value*gamma_s*gamma_as**2*mi + N*alpha*gamma_a*gamma_s*gamma_as*mi**2 - N*alpha*gamma_a*gamma_s**2*mi*v + N*alpha*gamma_a**2*gamma_s*mi*v + N*alpha*gamma_a*gamma_as*mi**2*v - N*alpha*gamma_s*gamma_as*mi**2*v - N*alpha*gamma_s**2*gamma_as*mi*v - N*alpha*beta*exp_value*gamma_a**2*mi**2 - N*alpha*beta*exp_value*gamma_s**2*mi**2 + 2*N*gamma_a*gamma_s*gamma_as*mi*v + N*alpha**2*beta*exp_value*gamma_a**2*mi**2 + N*alpha**2*beta*exp_value*gamma_s**2*mi**2 - 2*N*beta*exp_value*gamma_a*gamma_s*gamma_as*mi + N*alpha*gamma_a*gamma_s*gamma_as*mi*v + 2*N*alpha*beta*exp_value*gamma_a*gamma_s*mi**2 - N*alpha*beta*exp_value*gamma_a*gamma_s**2*mi + N*alpha*beta*exp_value*gamma_a**2*gamma_s*mi - N*alpha*beta*exp_value*gamma_a*gamma_as*mi**2 + N*alpha*beta*exp_value*gamma_s*gamma_as*mi**2 - N*alpha*beta*exp_value*gamma_s**2*gamma_as*mi - 2*N*alpha**2*beta*exp_value*gamma_a*gamma_s*mi**2 + N*alpha*beta*exp_value*gamma_a*gamma_s*gamma_as*mi)/(beta*mi**3 + beta*mi**4 + beta*gamma_a**2*mi**2 + beta*gamma_as**2*mi**2 + beta*gamma_a**2*gamma_s + beta*gamma_s*gamma_as**2 + 2*beta*gamma_a*mi**2 + beta*gamma_a**2*mi + 2*beta*gamma_a*mi**3 + beta*gamma_s*mi**2 + beta*gamma_s*mi**3 + 2*beta*gamma_as*mi**2 + beta*gamma_as**2*mi + 2*beta*gamma_as*mi**3 + alpha*beta*gamma_a*gamma_s**2 - alpha*beta*gamma_a**2*gamma_s + alpha*beta*gamma_s**2*gamma_as - beta*exp_value*gamma_a**2*gamma_s - beta*exp_value*gamma_s*gamma_as**2 - alpha*beta*gamma_a*mi**2 - alpha*beta*gamma_a**2*mi - alpha*beta*gamma_a*mi**3 + alpha*beta*gamma_s*mi**2 + alpha*beta*gamma_s**2*mi + alpha*beta*gamma_s*mi**3 - beta*exp_value*gamma_s*mi**2 + 2*beta*gamma_a*gamma_s*mi**2 + beta*gamma_a**2*gamma_s*mi + 2*beta*gamma_a*gamma_as*mi**2 + 2*beta*gamma_s*gamma_as*mi**2 + beta*gamma_s*gamma_as**2*mi - alpha*beta*gamma_a**2*mi**2 + alpha*beta*gamma_s**2*mi**2 + 2*beta*gamma_a*gamma_s*gamma_as + 2*beta*gamma_a*gamma_s*mi + 2*beta*gamma_a*gamma_as*mi + 2*beta*gamma_s*gamma_as*mi + alpha**2*beta*exp_value*gamma_a**2*mi + alpha**2*beta*exp_value*gamma_s**2*mi - alpha*beta*gamma_a*gamma_s*gamma_as - 2*beta*exp_value*gamma_a*gamma_s*gamma_as - alpha*beta*gamma_a*gamma_as*mi + alpha*beta*gamma_s*gamma_as*mi - 2*beta*exp_value*gamma_a*gamma_s*mi - 2*beta*exp_value*gamma_s*gamma_as*mi + 2*beta*gamma_a*gamma_s*gamma_as*mi - alpha*beta*exp_value*gamma_a*gamma_s**2 + alpha*beta*exp_value*gamma_a**2*gamma_s - alpha*beta*exp_value*gamma_s**2*gamma_as - alpha*beta*exp_value*gamma_a*mi**2 - alpha*beta*exp_value*gamma_a**2*mi + alpha*beta*exp_value*gamma_s*mi**2 - alpha*beta*exp_value*gamma_s**2*mi + alpha*beta*gamma_a*gamma_s**2*mi - alpha*beta*gamma_a**2*gamma_s*mi - alpha*beta*gamma_a*gamma_as*mi**2 + alpha*beta*gamma_s*gamma_as*mi**2 + alpha*beta*gamma_s**2*gamma_as*mi - 2*alpha**2*beta*exp_value*gamma_a*gamma_s*mi + alpha*beta*exp_value*gamma_a*gamma_s*gamma_as + 2*alpha*beta*exp_value*gamma_a*gamma_s*mi - alpha*beta*exp_value*gamma_a*gamma_as*mi + alpha*beta*exp_value*gamma_s*gamma_as*mi - alpha*beta*gamma_a*gamma_s*gamma_as*mi)
       
        return [S2/N, V2/N, E2/N, A2/N, I2/N, R2/N]
   
    elif opcao == 'dfe':
        S1 = N*mi/(mi + v)
        V1 = N*v/(mi + v)
        E1 = 0
        A1 = 0
        I1 = 0
        R1 = 0
        return [S1/N, V1/N, E1/N, A1/N, I1/N, R1/N]


# Equilibrio Livre de Doenca
print(equilibria_points('dfe'))

#Equilibrio Endemico
print(equilibria_points('ee'))